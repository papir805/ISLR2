?I
lmfit2 <- lm(medv ~ lstat + I(lstat^2))
lmfit2 <- lm(medv ~ lstat + lstat**2
lmfit2 <- lm(medv ~ lstat + lstat**2)
lmfit2 <- lm(medv ~ lstat + lstat**2)
summary(lmfit2)
lm.fit2 <- lm(medv ~ lstat + lstat**2)
summary(lm.fit2)
lmfit2 <- lm(medv ~ lstat + I(lstat^2))
lm.fit$model
summary(lm.fit)
lm.fit <- lm(medv ~ lstat, data=Boston)
anova(lm.fit, lm.fit2)
anova(lm.fit, lmfit2)
par(mfrow= c(2,2))
plot(lmfit2)
lm.fit5 <- lm(medv ~ poly(lstat, 5))
summary(lm.fit5)
plot(lm.fit5)
?poly
lm.fit5 <- lm(medv ~ poly(lstat, 5, raw=TRUE))
plot(lm.fit5)
summary(lm.fit5)
summary(lm(medv ~ log(rm), data=Boston))
head(Carseats)
?Carseats
lm.fit <- lm(Sales ~ . + Income:Advertising + Price:Age, data = Carseats)
summary(lm.fit)
attach(Carseats)
contrasts(ShelveLoc)
?constrasts
?contrasts
LoadLibraries
LoadLibraries()
LoadLibraries <- function() {}
LoadLibraries <- function() {
library(ISLR2)
library(MASS)
print("The libraries have been loaded.")
}
LoadLibraries()
LoadLibraries
50 + 20(4)
50 + 20*4
IQ = 110
GPA = 4
50 + 20*GPA + 0.07*IQ + 35*1 + 0.01*(GPA*IQ) - 10*(GPA*1)
View(Auto)
getwd()
setwd(".")
getwd()
setwd("~/Google Drive/Coding/R/ISLR2/datasets")
Auto <- read.csv("Auto.csv", na.strings = "?")
Auto <- read.csv("Auto.csv", na.strings = "?", stringsAsFactors = TRUE)
View(Auto)
auto_lm <- lm(mpg ~ horsepower, data=Auto)
summary(auto_lm)
predict(auto_lm, data.frame(horsepower = (c(98))), interval="confidence")
predict(auto_lm, data.frame(horsepower = (c(98))), interval="prediction")
plot(Auto$horsepower, Auto$mpg)
ablin(auto_lm)
abline(auto_lm)
abline(auto_lm, col='red')
abline(auto_lm, col='red', lwd=4)
abline(auto_lm, col='red', lwd=2)
abline(auto_lm, col='red', lwd=3)
plot(Auto$horsepower, Auto$mpg)
abline(auto_lm, col='red', lwd=2)
plot(auto_lm)
par(mfrows=c(2,2))
par(mfrow=c(2,2))
plot(auto_lm)
pairs(Auto)
cor(Auto)
cor(Auto$-name)
cor(Auto[,-"name"])
names(Auto)
cor(Auto[,-which(names(Auto)=="name"])
cAuto[,-which(names(Auto)=="name")]
Auto[,-which(names(Auto)=="name")]
cor(Auto[,-which(names(Auto)=="name")])
auto_mult_lm <- lm(mpg ~ . - name, data=Auto)
summary(auto_mult_lm)
plot(auto_mult_lm)
auto_mult_lm <- lm(mpg ~ . - name + displacement:horsepower, data=Auto)
summary(auto_mult_lm)
plot(auto_mult_lm)
summary(lm(mpg ~ horsepower*displacement), data=Auto)
summary(lm(mpg ~ horsepower*displacement, data=Auto)
summary(lm(mpg ~ horsepower*displacement, data=Auto))
))
summary(lm(mpg ~ horsepower*displacement, data=Auto))
summary(lm(mpg ~ cylinders*displacement, data=Auto))
summary(lm(mpg ~ cylinders*horsepower, data=Auto))
summary(lm(mpg ~ cylinders*horsepower, data=Auto))
plot(lm(mpg ~ cylinders*horsepower, data=Auto))
plot(lm(mpg ~ log(cylinders)*horsepower, data=Auto))
plot(lm(mpg ~ log(cylinders)*log(horsepower), data=Auto))
plot(lm(mpg ~ log(cylinders)*sqrt(horsepower), data=Auto))
plot(lm(mpg ~ sqrt(cylinders)*sqrt(horsepower), data=Auto))
sqrt(4)
plot(lm(mpg ~ horsepower*displacement, data=Auto))
plot(lm(mpg ~ sqrt(horsepower)*sqrt(displacement), data=Auto))
plot(lm(mpg ~ horsepower*displacement, data=Auto))
plot(lm(mpg ~ horsepower*displacement + weight*acceleration, data=Auto))
plot(lm(mpg ~ sqrt(horsepower*displacement) + weight*acceleration, data=Auto))
plot(lm(mpg ~ sqrt(horsepower*displacement) + sqrt(weight*acceleration), data=Auto))
summary(lm(mpg ~ . * ., data=Auto))
summary(lm(mpg ~ . * ., data=Auto[,-'name']))
summary(lm(mpg ~ . * ., data=Auto[,-9]))
?p.adjust
Carseats <- read.csv("Carseats.csv")
View(Carseats)
carseats_lm <- lm(Sales ~ Price + Urban + US, data=Carseats)
summary(carseats_lm)
?Carseats
?Carseats
??Carseats
carseats_lm <- lm(Sales ~ Price + US, data=Carseats)
summary(carseats_lm)
summary(lm(Sales ~ Price + Urban + US, data=Carseats))
summary(carseats_lm)
mean(Carseats$Sales)
names(summary(carseats_lm))
summary(carseats_lm)$residuals
names(summary(carseats_lm))
summary(carseats_lm)
mean(Carseats$Sales)
2.469 / mean(Carseats$Sales)
confint(carseats_lm)
plot(carseats_lm)
summary(lm(Sales ~ Price + Urban + US, data=Carseats))
summary(carseats_lm)
set.seed(1)
x <- rnorm(100)
y <- 2 * x + rnorm(100)
lm(y ~ x)
lm(y ~ x+0)
summary(lm(y~x+0))
.1065 / mean(x)
.1065 / mean(y)
summary(lm(y~x))
summary(lm(x~y+0))
summary(lm(y~x+0))
summary(lm(x~y))
summary(lm(x~y))
x <- rnorm(100)
eps <- rnorm(100, sd=0.25)
y <- -1 + 0.5X + eps
y <- -1 + 0.5*X + eps
y <- -1 + 0.5*x + eps
length(y)
plot(x, y)
lm_13 <- lm(y ~ x)
abline(lm_13, col='red', lwd=3)
parameters(lm_13)
names(lm_13)
coefficients(lm_13)
abline(x, -1+0.5x)
abline(x, -1+0.5*x)
abline(x, -1+0.5*x)
abline(x, y=-1+0.5*x)
?abline
abline(-1, 0.5)
plot(x, y)
plot(x, y)
abline(lm_13, col='red', lwd=3)
abline(-1, 0.5)
?legend
legend(1)
legend(1, legend = c('test'))
legend(1, 100, legend = c('test', 'test2'))
legend(1, 1, legend = c('test', 'test2'))
g1 +
geom_abline(aes(intercept = -1, slope = 0.5, col = "Population")) +
geom_abline(aes(intercept = coef(lm_17)[1], slope = coef(lm_17)[2], col = "Least Squares")) +
scale_colour_manual(name = "Regression Line:", values = c("red", "blue")) +
theme(legend.position = "bottom") +
labs(title = "sd(eps) = 0.5")
param(mfrow=c(1,1))
par(mfrow=c(1,1))
plot(x, y)
abline(lm_13, col='red', lwd=3)
abline(-1, 0.5)
?abline
legend(x="topright", legend=c("test1", "test2"))
legend(x="topright", legend=c("test1", "test2"), col=c("red", "green"))
plot(x, y)
legend(x="topright", legend=c("test1", "test2"), col=c("red", "green"))
legend(x="topright", legend=c("test1", "test2"), col=c("red", "green"))
plot(x, y)
abline(lm_13, col='red', lwd=3)
abline(-1, 0.5)
legend(x="topright", legend=c("test1", "test2"), col=c("red", "green"))
legend(x="topright", legend=c("test1", "test2"), col=c("red", "green"), lty=c(1,2))
legend(x="topright", legend=c("test1", "test2"), col=c("red", "green"), lty=c(1,1))
legend(x="topright", legend=c("test1", "test2"), col=c("red", "green"), lty=c(1,1))
abline(-1, 0.5, col='green')
lm_13_quad <- lm(y ~ x*x)
summary(lm_13_quad)
lm_13_quad <- lm(y ~ x + x:x)
summary(lm_13_quad)
lm_13_quad <- lm(y ~ x + I(x^2))
summary(lm_13_quad)
summary(lm_13)
x_2 <- rnorm(100)
y_2 <- rnorm(100, sd=0.1)
eps <- y_2
y_2 <- -1 + 0.5 * x_2 + eps
plot(x_2, y_2)
lm_13_2 <- lm(y ~ x)
summary(lm_13_2)
abline(lm_13_2)
abline(-1, 0.5, col="red", lwd=2)
legend(x="topleft", col=c("black", "red"), lty=c(1,1))
legend(x="topleft", col=c("black", "red"), lty=c(1,1))
legend(x="topleft", legend=c("regression", true"), col=c("black", "red"), lty=c(1,1))
legend(x="topleft", legend=c("regression", "true"), col=c("black", "red"), lty=c(1,1))
lm_13_quad_2 <- lm(y ~ x + I(x^2))
summary(lm_13_quad_2)
summary(lm_13_quad)
summary(lm_13)
summary(lm_13_2)
x_1 <- rnorm(100)
x_2 <- rnorm(100)
eps_1 <- rnorm(100, sd=0.25)
eps_2 <- rnorm(100, sd=0.10)
y_1 <- -1 + 0.5*x_1 + eps_1
y_2 <- -1 + 0.5*x_2 + eps_2
lm_1 <- lm(y_1 ~ x_1)
lm_1_quad <- lm(y_1 ~ x_1 + I(x_1^2))
lm_2 <- lm(y_2 ~ x_2)
lm_2_quad <- lm(y_2 ~ x_2 + I(x_2^2))
summary(lm_1)
summary(lm_1_quad)
summary(lm_1)
summary(lm_2)
summary(lm_1)
summary(lm_2)
summary(lm_1_quad)
summary(lm_2_quad)
confit(lm_1)
confint(lm_1)
confint(lm_2)
set.seed(1)
x1 <- runif(100)
x2 <- 0.5 * x1 + rnorm(100) / 10
y <- 2 + 2 * x1 + 0.3 * x2 + rnorm(100)
?runif
lm(y ~ x1 + x2)
plot(x1, x2)
corr(x1, x2)
cor(x1, x2)
lm(y ~ x1 + x2)
summary(lm(y ~ x1 + x2))
summary(lm(y ~ x1))
summary(lm(y ~ x2))
x1 <- c(x1, 0.1)
x2 <- c(x2, 0.8)
y <- c(y, 6)
summary(lm(y ~ x1 + x2))
summary(lm(y ~ x1))
summary(lm(y ~ x2))
par(mfrow=c(2,2))
plot(lm(y ~ x1 + x2))
plot(lm(y ~ x1))
plot(lm(y ~ x1 + x2))
plot(lm(y ~ x1))
plot(lm(y ~ x2))
plot(lm(y ~ x1 + x2))
plot(lm(y ~ x2))
plot(lm(y ~ x1))
plot(lm(y ~ x2))
?Boston
Boston
library(ISLR2)
data(Boston)
?Boston
View(Boston)
corr(Boston)
cor(Boston)
lm(crim ~ zn)
lm(crim ~ zn, data=Boston)
summary(lm(crim ~ zn, data=Boston))
summary(lm(crim ~ indus, data=Boston))
summary(lm(crim ~ chas, data=Boston))
summary(lm(crim ~ nox, data=Boston))
summary(lm(crim ~ rm, data=Boston))
summary(lm(crim ~ age, data=Boston))
summary(lm(crim ~ dis, data=Boston))
summary(lm(crim ~ rad, data=Boston))
summary(lm(crim ~ tax, data=Boston))
summary(lm(crim ~ ptpratio, data=Boston))
summary(lm(crim ~ ptratio, data=Boston))
summary(lm(crim ~ lstat, data=Boston))
summary(lm(crim ~ medv, data=Boston))
plot(Boston$rad, Boston$crim)
par(mfrows=c(1,1))
par(mfrow=c(1,1))
plot(Boston$rad, Boston$crim)
plot(Boston$tax, Boston$crim)
plot(Boston$rad, Boston$crim)
plot(Boston$lstat, Boston$crim)
summary(lm(crim ~ .))
summary(lm(crim ~ ., data=Boston))
plot(Boston$medv, Boston$crim)
?Boston
plot(cars)
data(Boston)
data(Boston)
plot(cars)
plot(cars)
plot(cars)
x
plot(cars)
x
plot(cars)
x
data(Boston)
x<-55
data(Boston)
data(Boston)
names(Boston)
crim_by_zn = lm(crim ~ zn)
crim_by_zn = lm(crim ~ zn)
crim_by_indus = lm(crim ~ indus)
crim_by_chas = lm(crim ~ chas)
crim_by_nox = lm(crim ~ nox)
crim_by_rm = lm(crim ~ rm)
crim_by_age = lm(crim ~ age)
crim_by_dis = lm(crim ~ dis)
crim_by_rad = lm(crim ~ rad)
crim_by_tax = lm(crim ~ tax)
crim_by_ptratio = lm(crim ~ ptratio)
crim_by_lstat = lm(crim ~ lstat)
crim_by_medv = lm(crim ~ medv)
data(Boston)
names(Boston)
crim_by_zn = lm(crim ~ zn, data=Boston)
crim_by_indus = lm(crim ~ indus, data=Boston)
crim_by_chas = lm(crim ~ chas, data=Boston)
crim_by_nox = lm(crim ~ nox, data=Boston)
crim_by_rm = lm(crim ~ rm, data=Boston)
crim_by_age = lm(crim ~ age, data=Boston)
crim_by_dis = lm(crim ~ dis, data=Boston)
crim_by_rad = lm(crim ~ rad, data=Boston)
crim_by_tax = lm(crim ~ tax, data=Boston)
crim_by_ptratio = lm(crim ~ ptratio, data=Boston)
crim_by_lstat = lm(crim ~ lstat, data=Boston)
crim_by_medv = lm(crim ~ medv, data=Boston)
summary(crim_by_zn)
summary(crim_by_zn)
summary(crim_by_indus)
names(Boston)
summary(crim_by_chas)
names(Boston)
summary(crim_by_nox)
summary(crim_by_rm)
plot(cars)
data(Boston)
names(Boston)
crim_by_zn = lm(crim ~ zn, data=Boston)
crim_by_indus = lm(crim ~ indus, data=Boston)
crim_by_chas = lm(crim ~ chas, data=Boston)
crim_by_nox = lm(crim ~ nox, data=Boston)
crim_by_rm = lm(crim ~ rm, data=Boston)
crim_by_age = lm(crim ~ age, data=Boston)
crim_by_dis = lm(crim ~ dis, data=Boston)
crim_by_rad = lm(crim ~ rad, data=Boston)
crim_by_tax = lm(crim ~ tax, data=Boston)
crim_by_ptratio = lm(crim ~ ptratio, data=Boston)
crim_by_lstat = lm(crim ~ lstat, data=Boston)
crim_by_medv = lm(crim ~ medv, data=Boston)
summary(crim_by_zn)
summary(crim_by_indus)
summary(crim_by_chas)
names(Boston)
summary(crim_by_nox)
summary(crim_by_rm)
summary(crim_by_age)
summary(crim_by_dis)
summary(crim_by_rad)
summary(crim_by_tax)
summary(crim_by_ptratio)
summary(crim_by_lstat)
summary(crim_by_medv)
?Boston
# This predictor appears statistically significant
summary(crim_by_zn)
plot(Boston$zn, Boston$crim)
abline(crim_by_zn, col="red")
# This predictor appears statistically significant
summary(crim_by_indus)
plot(Boston$indus, Boston$crim)
abline(crim_by_zn, col="red")
# This predictor IS NOT statistically significant
summary(crim_by_chas)
plot(Boston$zn, Boston$crim)
abline(crim_by_chas, col="red")
# This predictor appears statistically significant
summary(crim_by_zn)
plot(Boston$zn, Boston$crim)
abline(crim_by_zn, col="red")
# This predictor appears statistically significant
summary(crim_by_indus)
plot(Boston$indus, Boston$crim)
abline(crim_by_indus, col="red")
# This predictor IS NOT statistically significant
summary(crim_by_chas)
plot(Boston$chas, Boston$crim)
abline(crim_by_chas, col="red")
# This predictor appears statistically significant
summary(crim_by_nox)
plot(Boston$nox, Boston$crim)
abline(crim_by_nox, col="red")
# This predictor appears statistically significant
summary(crim_by_rm)
plot(Boston$rm, Boston$crim)
abline(crim_by_rm, col="red")
# This predictor appears statistically significant
summary(crim_by_age)
plot(Boston$age, Boston$crim)
abline(crim_by_age, col="red")
# This predictor appears statistically significant
summary(crim_by_dis)
plot(Boston$dis, Boston$crim)
abline(crim_by_dis, col="red")
# This predictor appears statistically significant
summary(crim_by_rad)
plot(Boston$zn, Boston$crim)
abline(crim_by_rad, col="red")
# This predictor appears statistically significant
summary(crim_by_rad)
plot(Boston$rad, Boston$crim)
abline(crim_by_rad, col="red")
# This predictor appears statistically significant
summary(crim_by_tax)
plot(Boston$tax, Boston$crim)
abline(crim_by_tax, col="red")
# This predictor appears statistically significant
summary(crim_by_ptratio)
plot(Boston$ptratio, Boston$crim)
abline(crim_by_ptratio, col="red")
# This predictor appears statistically significant
summary(crim_by_lstat)
plot(Boston$lstat, Boston$crim)
abline(crim_by_lstat, col="red")
# This predictor appears statistically significant
summary(crim_by_medv)
plot(Boston$medv, Boston$crim)
abline(crim_by_medv, col="red")
crim_by_all = lm(crim ~ ., data=Boston)
summary(crim_by_all)
coef(crim_by_all)
coef(crim_by)[-1]
coef(crim_by_all)[-1]
c(coef(crim_by_zn[-1]), coef_crim_by_indus[-1], coef(crim_by_chas[-1], coef(crim_by_nox[-1], coef(crim_by_rm[-1], coef(crim_by_age[-1], coef(crim_by_dis[-1], coef(crim_by_rad[-1], coef(crim_by_tax[-1], coef(crim_by_ptratio[-1], coef(crim_by_lstat[-1], coef(crim_by_medv[-1]))
)
:
""
c(coef(crim_by_zn[-1]), coef(crim_by_indus[-1]), coef(crim_by_chas[-1]), coef(crim_by_nox[-1]), coef(crim_by_rm[-1]), coef(crim_by_age[-1]), coef(crim_by_dis[-1]), coef(crim_by_rad[-1]), coef(crim_by_tax[-1]), coef(crim_by_ptratio[-1]), coef(crim_by_lstat[-1]), coef(crim_by_medv[-1]))
coef(crim_by_zn[-1])
coef(crim_by_zn)
coef(crim_by_zn[1])
coef(crim_by_zn[2])
coef(crim_by_zn[1])
coef(crim_by_zn[0])
coef(crim_by_zn[1])
coef(crim_by_zn[2])
coef(crim_by_all[1])
coef(crim_by_all[-1])
coef(crim_by_all)[-1]
coef(crim_by_zn)[1]
coef(crim_by_zn)[2]
coef(crim_by_zn)[-1]
coef(crim_by_all)[-1]
c(coef(crim_by_zn)[-1],
coef(crim_by_indus)[-1],
coef(crim_by_chas)[-1],
coef(crim_by_nox)[-1],
coef(crim_by_rm)[-1],
coef(crim_by_age)[-1],
coef(crim_by_dis)[-1],
coef(crim_by_rad)[-1],
coef(crim_by_tax)[-1],
coef(crim_by_ptratio)[-1],
coef(crim_by_lstat)[-1],
coef(crim_by_medv)[-1])
y_coef = coef(crim_by_all)[-1]
x_coef = c(coef(crim_by_zn)[-1],
coef(crim_by_indus)[-1],
coef(crim_by_chas)[-1],
coef(crim_by_nox)[-1],
coef(crim_by_rm)[-1],
coef(crim_by_age)[-1],
coef(crim_by_dis)[-1],
coef(crim_by_rad)[-1],
coef(crim_by_tax)[-1],
coef(crim_by_ptratio)[-1],
coef(crim_by_lstat)[-1],
coef(crim_by_medv)[-1])
plot(x_coef, y_coef)
coef(crim_by_medv)[-1])
coef(crim_by_medv)[-1]
coef(crim_by_zn)[-1]
coef(crim_by_all)[-1]
coef(crim_by_nox)[-1]
install.packages('IRkernel')
IRkernel::installspec(user=FALSE)
IRkernel::installspec(user = FALSE)
install.packages('jupyter-client')
install.packages('jupyter')
